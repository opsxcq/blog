<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on STRM</title><link>https://strm.sh/posts/</link><description>Recent content in Posts on STRM</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>STRM</copyright><lastBuildDate>Sat, 15 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://strm.sh/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>How to use Org Mode and Hugo for a better scientific blogging</title><link>https://strm.sh/posts/org-mode-blogging/</link><pubDate>Sat, 15 Jan 2022 00:00:00 +0000</pubDate><guid>https://strm.sh/posts/org-mode-blogging/</guid><description>&lt;p>Small overview on the usage of &lt;code>Org-Mode&lt;/code> for blogging leveraging all features
that &lt;code>Emacs&lt;/code> can give, as an interactive and literate code development environment
where you have access to bibliographic tools for easy reference and a
comfortable editor.&lt;/p></description></item><item><title>Books</title><link>https://strm.sh/posts/books/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>https://strm.sh/posts/books/</guid><description>Bellow a curated list of books which I consumed in the recent past years, which my thoughts on them.
Machine Learning and Data Science books TensorFlow for deep learning : from linear regression to reinforcement learning (&amp;lt;&amp;amp;BharathRamsundar600&amp;gt;) Overall is a subpar hello world kind of book for Tensorflow, nothing but the basics. Chapter 8 on Reinforcement Learning has some nice examples which are easy to be understood.
Hands-On Neural Networks with TensorFlow 2.</description></item><item><title>Minesort, a cryptography based sorting algorithm</title><link>https://strm.sh/posts/mine-sort/</link><pubDate>Sat, 29 Jun 2019 00:00:00 +0000</pubDate><guid>https://strm.sh/posts/mine-sort/</guid><description>&lt;p>Mine sort is a cryptography based sorting algorithm that can run in \(O(n)\) time
if you are lucky. It consists in two stages, the first one is to create a
cryptographic seed, and the second one is to check if the seed sorts the array.&lt;/p></description></item><item><title>Restricting Docker container networking to Tor only</title><link>https://strm.sh/posts/restricting-container-networking-to-tor-only/</link><pubDate>Thu, 14 Feb 2019 00:00:00 +0000</pubDate><guid>https://strm.sh/posts/restricting-container-networking-to-tor-only/</guid><description>&lt;p>Image the following use case, you have an application running which you strictly
want to force its traffic to go through the &lt;strong>TOR&lt;/strong> network. In normal case
scenarios, you can implement at your network firewall level a restriction to
such traffic, a more simplistic approach would be locally to add an &lt;code>iptables&lt;/code>
rule, but in the container world everything is different.&lt;/p></description></item><item><title>Linear Regression</title><link>https://strm.sh/posts/linear-regression-python/</link><pubDate>Tue, 12 Feb 2019 00:00:00 +0000</pubDate><guid>https://strm.sh/posts/linear-regression-python/</guid><description>&lt;p>Machine learning by itself sometimes isn&amp;rsquo;t the best answer, but it can be
combined with specialist agents to expand it&amp;rsquo;s capabilities and reduce the
training time. In the other hand, for simple problems, and specially for linear
problems, usually machine learning can be replaced with more simple and precise
approaches like &lt;a href="https://strm.sh/post/linear-programming/">linear programming&lt;/a>.&lt;/p></description></item><item><title>Abusing insecure docker deployments</title><link>https://strm.sh/posts/abusing-insecure-docker-deployments/</link><pubDate>Sat, 10 Nov 2018 00:00:00 +0000</pubDate><guid>https://strm.sh/posts/abusing-insecure-docker-deployments/</guid><description>&lt;p>Is possible to abuse misconfigurations and bugs and escape from containers in
several scenarios, in this post I will explore the most basic one: abusing the
docker socket to escape the container and run code as &lt;strong>root&lt;/strong> in the host machine.&lt;/p></description></item><item><title>Bitcoin address generation in pure python</title><link>https://strm.sh/posts/bitcoin-address-generation-in-pure-python/</link><pubDate>Fri, 14 Sep 2018 00:00:00 +0000</pubDate><guid>https://strm.sh/posts/bitcoin-address-generation-in-pure-python/</guid><description>&lt;p>This post is dedicated to explore the generation of &lt;code>Bitcoin&lt;/code> key pairs using pure
python with no external libraries.&lt;/p></description></item><item><title>Mining monero using live a live usb linuxkit build</title><link>https://strm.sh/posts/mining-monero-using-a-live-linuxkit-build/</link><pubDate>Wed, 12 Sep 2018 00:00:00 +0000</pubDate><guid>https://strm.sh/posts/mining-monero-using-a-live-linuxkit-build/</guid><description>&lt;p>Linuxkit is a good tool to create immutable Linux systems, so why don&amp;rsquo;t use it
to build a Monero mining live distro ? The only thing needed to build an Linux
with Linuxkit is a &lt;code>yml&lt;/code> file containing the system information.&lt;/p></description></item><item><title>Running Cron tasks on docker - The correct way</title><link>https://strm.sh/posts/docker-cron-right-way/</link><pubDate>Thu, 06 Sep 2018 00:00:00 +0000</pubDate><guid>https://strm.sh/posts/docker-cron-right-way/</guid><description>&lt;p>While is perfectly possible to use &lt;em>cron&lt;/em> inside a container, I strongly
advise you to don&amp;rsquo;t do it. Some of the most important points on why is a
&lt;strong>bad practice to run cron inside a container&lt;/strong>:&lt;/p></description></item><item><title>How to disable page table isolation on Debian</title><link>https://strm.sh/posts/disable-page-isolation-debian/</link><pubDate>Thu, 09 Aug 2018 00:00:00 +0000</pubDate><guid>https://strm.sh/posts/disable-page-isolation-debian/</guid><description>&lt;p>After meltdown, spectre and other similar bugs were discoreved and patched the
overall performance on Linux decreased. &lt;a href="https://gist.github.com/bobrik/c67189e88efcc2a1491c54c15f5fe006">Here a detailed benchmark&lt;/a> about the
impact of these fixes on Redis performance. Something between &lt;strong>15%&lt;/strong> and &lt;strong>6%&lt;/strong> slower
than the same machine without the fixes.&lt;/p></description></item><item><title>Theodore J. Kaczynski Manifesto</title><link>https://strm.sh/posts/tj-kaczynski-manifesto/</link><pubDate>Wed, 14 Sep 2016 00:00:00 +0000</pubDate><guid>https://strm.sh/posts/tj-kaczynski-manifesto/</guid><description>&lt;p>Theodore John Kaczynski, also known as the Unabomber, is an American domestic
terrorist and former mathematics professor. He was a mathematics prodigy, but
abandoned his academic career in 1969 to pursue a primitive life.&lt;/p></description></item></channel></rss>